my_data
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = value, y = outcome)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
dev.off()
dev.off()
x = rnorm(10)
x
ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.8,0.2))
d
ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.8,0.2)),sample(x = c(0,1),size = 1,prob = c(0.2,0.8)))
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.8,0.2)),
sample(x = c(0,1),size = 1,prob = c(0.2,0.8))) ) %>%
arrange(id)
my_data
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.8,0.2)),
sample(x = c(0,1),size = 1,prob = c(0.2,0.8))) ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
my_data
n_dpoints = 10
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = n_dpoints %>% sample(x = c(0,1), size = ., replace = TRUE) %>% sort) %>%
arrange(id)
write_delim(x = my_data, path = 'data/logistic_regression.txt', delim = "\t")
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.8,0.2)),
sample(x = c(0,1),size = 1,prob = c(0.2,0.8))) ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
my_data
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.7,0.3)),
sample(x = c(0,1),size = 1,prob = c(0.3,0.7))) ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
n_dpoints = 100
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = n_dpoints %>% sample(x = c(0,1), size = ., replace = TRUE) %>% sort) %>%
arrange(id)
write_delim(x = my_data, path = 'data/logistic_regression.txt', delim = "\t")
my_data   = tibble( id = n_dpoints %>% sample,
x  = n_dpoints %>% rnorm %>% sort %>% round(3),
y  = ifelse(x<0,sample(x = c(0,1),size = 1,prob = c(0.7,0.3)),
sample(x = c(0,1),size = 1,prob = c(0.3,0.7))) ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
y = rep(NA,n_dpoints)
y
x = rnorm(n_dpoints)
y = rep(NA,n_dpoints)
cbind(x,y)
x = rnorm(n_dpoints)
y = rep(NA,n_dpoints)
for( i in 1:n_dpoints ){
y[i] = ifelse(x[i]<0,
sample(x = c(0,1),size = 1,prob = c(0.7,0.3)),
sample(x = c(0,1),size = 1,prob = c(0.3,0.7)) )
}
y
cbind(x,y)
x = rnorm(n_dpoints)
y = rep(NA,n_dpoints)
for( i in 1:n_dpoints ){
y[i] = ifelse(x[i]<0,
sample(x = c(0,1),size = 1,prob = c(0.7,0.3)),
sample(x = c(0,1),size = 1,prob = c(0.3,0.7)) )
}
my_data   = tibble( id = n_dpoints %>% sample,
x  = x,
y  = y ) %>%
arrange(id)
my_data
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
x = rnorm(n_dpoints)
y = rep(NA,n_dpoints)
for( i in 1:n_dpoints ){
y[i] = ifelse(x[i]<0,
sample(x = c(0,1),size = 1,prob = c(0.8,0.2)),
sample(x = c(0,1),size = 1,prob = c(0.2,0.8)) )
}
my_data   = tibble( id = n_dpoints %>% sample,
x  = x,
y  = y ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
x = rnorm(n_dpoints)
y = rep(NA,n_dpoints)
for( i in 1:n_dpoints ){
y[i] = ifelse(x[i]<0,
sample(x = c(0,1),size = 1,prob = c(0.95,0.05)),
sample(x = c(0,1),size = 1,prob = c(0.05,0.95)) )
}
my_data   = tibble( id = n_dpoints %>% sample,
x  = x,
y  = y ) %>%
arrange(id)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=TRUE)
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = value, y = outcome)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE)
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE) +
theme_bw()
my_model_tidy
my_data
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
my-data
my_data
x
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
x
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE) +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
source('~/Projects/Teaching/Tutorials/scripts/03_logistic_regression.R')
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
stat_smooth(method="glm", method.args=list(family="binomial"), se=TRUE) +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
View(my_data)
rm(list=ls())
library('tidyverse')
library('readr')
library('broom')
my_data = read_delim(file = 'data/quantile_analysis.txt', delim = "\t")
my-data
my_data
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
theme_bw()
?quantile
my_data %>% quantile(x = x)
my_data %>% quantile
my_data %>% quantile(x = .$x)
quantile(rnorm(100))
my_data %>% select(x) %>% as_vector %>% quantile
my_data %>% select(x) %>% as_vector %>% quantile %>% tidy
?seq
seq(from = 0, to = 1)
seq(from = 0, to = 1, by = 0.25)
my_data %>% select(x) %>% as_vector %>% quantile(seq(from = 0, to = 1, by = 0.25)) %>% tidy
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
my_qui
my_quantiles
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(xintercept = my_quantiles) +
theme_bw()
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(xintercept = my_quantiles) +
theme_bw()
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(xintercept = my_quantiles, inherit.aes = FALSE) +
theme_bw()
?geom_vline
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = my_quantiles), data = my_quantiles) +
theme_bw()
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x), data = my_quantiles) +
theme_bw()
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x), data = my_quantiles, linetype = 'dashed') +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = names), data = my_quantiles, linetype = 'dashed') +
theme_bw()
my_quantiles
my_quantiles = my_data %>%
select(x) %>%
as_vector %>%
quantile(seq(from = 0, to = 1, by = 0.25)) %>%
tidy %>%
rename(lines=names)
my_quantiles
my_quantiles = my_data %>%
select(x) %>%
as_vector %>%
quantile(seq(from = 0, to = 1, by = 0.25)) %>%
tidy %>%
rename(lines=names) %>%
mutate(lines=factor(lines))
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = names), data = my_quantiles, linetype = 'dashed') +
theme_bw()
my_quantiles
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines), data = my_quantiles, linetype = 'dashed') +
theme_bw()
my_quantiles %>% select(lines) %>% str
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines), data = my_quantiles, linetype = 'dashed') +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_histogram() +
geom_vline(aes(xintercept = x, colour = lines), data = my_quantiles, linetype = 'dashed') +
theme_bw()
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
#geom_histogram() +
geom_vline(aes(xintercept = x, colour = lines), data = my_quantiles, linetype = 'dashed') +
theme_bw()
?geom_density
?geom_density
my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines), data = my_quantiles, linetype = 'dashed') +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/04_quantile_analysis.R')
p1 = my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines),
data = my_quantiles, linetype = 'dashed', linewidth = 2) +
theme_bw()
p1 = my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines),
data = my_quantiles, linetype = 'dashed', width = 2) +
theme_bw()
p1 = my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines),
data = my_quantiles, linetype = 'dashed', lwd = 2) +
theme_bw()
print(p1)
p1 = my_data %>%
ggplot(aes(x = x)) +
geom_density() +
geom_vline(aes(xintercept = x, colour = lines),
data = my_quantiles, linetype = 'dashed', lwd = 1) +
theme_bw()
print(p1)
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
my_data
rm(list=ls())
library('tidyverse')
library('readr')
library('broom')
my_data = read_delim(file = 'data/stratification_analysis.txt', delim = "\t")
my_data
my_data = read_delim(file = 'data/stratification_analysis.txt', delim = "\t")
my_data = my_data %>% mutate(z = factor(z))
my_data
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy ,#%>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
theme_bw()
my_data %>%
ggplot(aes(x = x, y = y, colour = z)) +
geom_point() +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/01_mk_data.R')
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
my_data %>%
ggplot(aes(x = x, y = y, colour = z)) +
geom_point() +
theme_bw()
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
my_data %>%
group_by(z) %>%
do(
model = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.)
) %>%
unnest(model, n)
my_data %>%
group_by(z) %>%
do(model = lm(data=., y ~ x) %>% tidy %>% slice(2),
ci    = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.) ) %>%
unnest(model, n)
my_data %>%
group_by(z) %>%
do(model = lm(data=., y ~ x) %>% tidy %>% slice(2),
ci    = lm(data=., y ~ x) %>% tidy %>% slice(2),
n     = nrow(.) ) %>%
unnest(model,ci, n)
my_data %>%
group_by(z) %>%
do(model = lm(data=., y ~ x) %>% tidy %>% slice(2),
ci    = lm(data=., y ~ x) %>% confint %>% tidy %>% slice(2),
n     = nrow(.) ) %>%
unnest(model,ci, n)
my_data %>%
group_by(z) %>%
do(model = lm(data=., y ~ x) %>% tidy %>% slice(2),
ci    = lm(data=., y ~ x) %>% confint %>% tidy %>% slice(2),
n     = nrow(.) ) %>%
unnest(model,ci, n) %>%
select(-.rownames)
my_data %>%
group_by(z) %>%
do(model = lm(data=., y ~ x) %>% tidy %>% slice(2),
ci    = lm(data=., y ~ x) %>% confint %>% tidy %>% slice(2),
n     = nrow(.) ) %>%
unnest(model,ci, n) %>%
select(-.rownames) %>%
rename(ci_2.5 = X2.5.., ci_97.5 = X97.5..)
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
my_models_tidy
my_data %>%
ggplot(aes(x = x, y = y, colour = z)) +
geom_point() +
geom_smooth(method='lm',formula = y ~ x) +
theme_bw()
my_data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
theme_bw()
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
install.packages('cowplot')
library('cowplot')
plot_grid(p1,p2)
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
plot_grid(p1,p2)
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
dev.off()
dev.off()
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/05_stratification_analysis.R')
dev.off()
dev.off()
rm(list=ls())
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
ls()
p1
my_data
my_data %>% do(model = lm(data = ., formula = y ~ x + z))
my_data %>% do(model = lm(data = ., formula = y ~ x + z), n = nrow(.))
my_data %>% do(model = lm(data = ., formula = y ~ x + z), n = nrow(.)) %>% unnest(model,n)
my_data %>% do(model = lm(data = ., formula = y ~ x + z) %>% slice(2), n = nrow(.)) %>% unnest(model,n)
my_data %>% do(model = lm(data = ., formula = y ~ x + z) %>% tidy %>% slice(2), n = nrow(.)) %>% unnest(model,n)
my_data %>% lm(formula = y ~ x + z, data = .)
my_data %>% lm(formula = y ~ x + z, data = .) %>% summary
my_data %>% lm(formula = y ~ x + z, data = .) %>% summary %>% tidy
my_data %>% lm(formula = y ~ x + z, data = .) %>% summary %>% tidy %>% round(3)
my_data %>% lm(formula = y ~ x + z, data = .) %>% summary %>% tidy
my_data %>% lm(formula = y ~ x, data = .) %>% summary %>% tidy
my_data %>% lm(formula = y ~ x, data = .) %>% summary %>% tidy
my_data %>% lm(formula = y ~ x + z, data = .) %>% summary %>% tidy
my_data %>% lm(formula = y ~ x, data = .) %>% summary %>% tidy
devoff()
dev.off()
dev.off()
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
my_data
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
source('~/Projects/Teaching/Tutorials/scripts/06_adjusted_analysis.R')
dev.off()
dev.off()
rm(list=ls())
rm(list=ls())
